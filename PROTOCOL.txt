
				     USER LOG-IN PROTOCOL
<------------------------------------------------------------------>

User password is stored, encrypted, in the Hub server. User enters 
her password into the UserInterface. An AES encryption object AES_U
is created with the User's password P_u and a randomly generated 8-byte 
salt S. The user then sends that salt along with an initialization 
vector IV to the hub in the clear, as well as a timestamp T and a 
randomly generated nonce encrypted with the user's AES encryption 
object. The Hub then creates its own AES encryption AES_H object using 
the client's salt and initialization vector. It then attempts to 
decrypt the user's timestamp and nonce message. If it is successful 
and if the timestamp is withing 5 minutes of the current time, the 
Hub then recognizes the user as authenticated. It then returns a 
message to the user encrypted with the Hub's encryption object 
containing its own timestamp and the user's nonce plus one. When the 
user receives this message, it attempts to decrypt it. If it succeeds 
and (a) the Hub's nonce equals the user's nonce plus one, and (b) 
the Hub's timestamp is within five minutes of the user's, then the user 
considers the Hub to be authenticated. he two may then communicate 
freely.

The protocol works as follows:

	User -> Hub: S,IV,{T_U,N}AES_U
	
	Hub -> User: {T_H, N+1}AES_H

See:
<------------------------------------------------------------------>
				    SYSADMIN LOG-IN PROTOCOL
<------------------------------------------------------------------>

The sysadmin accesses the Hub by means of a password. That password is 
combined with a stored initialization vector and salt to create an AES
encryption object. The the encryption object is used to decrypt an
encrypted copy of the password stored on the server. If the new an old
password match, the sysadmin is considered authenticated. 

The AES object created with the sysadmin password is also used to 
decrypt a second AES key. This key, along with a second initialization
vector and salt, is used to create a second AES object with which
objects stored on the Hub's disk will be encrypted. The reason for 
this second key is so that the sysadmin password can be changed 
without having to re-encrypt everything in stable storage.

<------------------------------------------------------------------>
				    SERVER LOG-IN PROTOCOL
<------------------------------------------------------------------>
The server log-in protocol is very similar to the user log-in protocol.
The Server password is stored and encrypted in the Hub server. An AES 
encryption object AES_S 

<------------------------------------------------------------------>
				      ENCRYPTION PROTOCOL
<------------------------------------------------------------------>

The system uses 128-bit password-based AES encryption with cipher-block 
chaining and PKCS5 padding. AES keys are generated using passwords 
combined with 8-byte randomly generated salts. 









 