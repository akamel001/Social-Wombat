We used a variety of testing methods. Most code was tested as it was written. Upon finishing a 
class, unit testing was done through writing a JUnit test file for that class. Manual testing was
heavily employed as well, especially in the text-based user interface, for which all possible 
scenarios were played out as best as possible.

Once each component was verified to be fairly stable on a stand-alone basis, integration testing 
was used to ensure that the system could work as a whole.

ClassData.java --  

ClassDB.java -- ClassDBTest.java tests adding and deleting classrooms, threads, and comments. Classes used
were ClassDB.java, ClassRoom.java, and Post.java.

ClassList.java -- 

Client.java -- 

ClientSocketHandler.java -- 

Cookie.java --  

Hub.java --  

HubSocketHandler.java -- 

Message.java -- 

Server.java -- 

ServerList.java -- 

ServerSocketHandler.java -- 

UserInterface.java -- The bulk of the testing for the user interface is outlined extensively in 
UserInterfaceTest.txt. UserInterfaceTest.java contains JUnit tests methods for the helper functions.

UserList.java --